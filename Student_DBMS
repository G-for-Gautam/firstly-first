#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct data
{
    char name[16];
    int roll;
    int marks;
};

void details(struct data student[], int *serial)
{

    for (int i = 0; i < *serial; i++)
    {
        printf("\n\033[1;35mName:\033[1;0m %s\n", student[i].name);
        printf("\033[1;35mroll:\033[1;0m %d\n", student[i].roll);
        printf("\033[1;35mmarks:\033[1;0m %d\n", student[i].marks);
    }
}

void rollcall(struct data student[], int *serial)
{
    printf("enter the roll number: ");
    int roll;
    scanf("%d", &roll);
    for (int i = 0; i < *serial; i++)
    {
        if (roll == student[i].roll)
        {
            printf("\n\033[1;35mName:\033[1;0m %s\n", student[i].name);
            printf("\033[1;35mroll:\033[1;0m %d\n", student[i].roll);
            printf("\033[1;35mmarks:\033[1;0m %d\n", student[i].marks);
        }
    }
}

void addme(struct data student[], int serial)
{
    printf("\n\033[1;35mName:\033[1;0m ");
    scanf("%s", &student[serial - 1].name);
    printf("\033[1;35mroll:\033[1;0m ");
    scanf("%d", &student[serial - 1].roll);
    printf("\033[1;35mmarks: \033[1;0m");
    scanf("%d", &student[serial - 1].marks);
}

void updateme(struct data student[], int *serial)
{
    printf("enter roll to update marks: ");
    int trashroll, dumarks;
    scanf("%d", &trashroll);
    printf("enter new marks: ");
    scanf("%d", &dumarks);
    for (int i = 0; i < *serial; i++)
    {
        if (trashroll == student[i].roll)
        {
            student[i].marks = dumarks;
        }
    }
}

void deleteme(struct data student[], int serial)
{
    printf("enter roll to \033[1;31mdelete\033[1;0m: ");
    int rolltrash;
    scanf("%d", &rolltrash);

    for (int i = 0; i < serial; i++)
    {
        if (student[i].roll == rolltrash)
        {
            while (i != serial - 1)
            {
                strcpy(student[i].name, student[i + 1].name);
                student[i].roll = student[i + 1].roll;
                student[i].marks = student[i + 1].marks;
                i++;
            }
            break;
        }
    }
    printf("\033[1;33m======\033[1;0m { *\033[1;31mRecord DELETED\033[1;0m* } \033[1;33m======\033[1;0m\n");
}

int main()
{   system("cls");
    int a, b, t1 = 9, t2 = 9, n = 0, serial = 4;
    char name[10], username[] = {"pit"}, password[] = {"pass"}, pass[10];

    struct data student[serial];

    strcpy(student[0].name, "pumpkin");
    student[0].roll = 1;
    student[0].marks = 99;

    strcpy(student[1].name, "laura");
    student[1].roll = 2;
    student[1].marks = 98;

    strcpy(student[2].name, "modi");
    student[2].roll = 3;
    student[2].marks = 97;

    strcpy(student[3].name, "bhupendra jogi");
    student[3].roll = 4;
    student[3].marks = 69;

    printf("\n\033[1;33m===========================\033[1;33m  \033[1;35mWelcome to STUDENT DATABASE MANAGEMENT SYSTEM\033[1;0m  \033[1;33m==========================\n");

    while (t1 != 0)
    {
        printf("\033[1;33mEnter the username: \033[1;0m");
        scanf("%s", &name);
        t1 = strcmp(name, username);
        if (t1 != 0)
        {
            printf("===== { *\033[1;31mACCESS DENIED\033[1;0m* } =====\n");
        }
    }
    while (t2 != 0)
    {
        printf("\033[1;33mEnter your password:\033[1;0m ");
        scanf("%s", &pass);
        t2 = strcmp(pass, password);
        if (t2 == 0)
        {
            printf("\033[1;33m=====\033[1;0m { *\033[1;32mACCESS GRANTED\033[1;0m* } \033[1;33m======\033[1;0m\n");
        }
        else
        {
            printf("===== { *\033[1;31mACCESS DENIED\033[1;0m* } =====\n");
        }
    }
    fflush(stdin);
    system("cls");
    printf("===== { *\033[1;32mACCESS GRANTED\033[1;0m* } ======\n");
    printf("\033[1;33m===========================\033[1;33m  \033[1;35mWelcome to STUDENT DATABASE MANAGEMENT SYSTEM\033[1;0m  \033[1;33m==========================\n");
    while (n != 6)
    {
        printf("\n\033[1;33m1. Display All Records\n2. Search by Roll Number\n3. Add a New Student\n4. Update Marks\n5. Delete a Record\n6. Log Out\033[1;0m\n\n");
        printf("Enter your choice: ");
        scanf("%d", &n);

        if (n == 1)
        {
            details(student, &serial);
        }
        if (n == 2)
        {
            rollcall(student, &serial);
        }
        if (n == 3)
        {
            serial++;
            addme(student, serial);
        }
        if (n == 4)
        {
            updateme(student, &serial);
        }
        if (n == 5)
        {
            deleteme(student, serial);
            serial--;
        }
    }

    printf("\n*{ \033[1;31mYou LOGGED OUT successfully\033[1;0m }*\n\033[1;33m===================================\033[1;0m  \033[1;34mThanks for using our SDBMS\033[1;0m  \033[1;33m=================================\033[1;0m\n\n");
    return 0;
}
